{
  "Resources": {
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/Resource"
      }
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-west-2a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet1/Subnet"
      }
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet1/RouteTable"
      }
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet1/EIP"
      }
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet1/NATGateway"
      }
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-west-2b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet2/Subnet"
      }
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet2/RouteTable"
      }
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "VPCPublicSubnet2EIP4947BC00": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet2/EIP"
      }
    },
    "VPCPublicSubnet2NATGateway3C070193": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet2/NATGateway"
      }
    },
    "VPCPublicSubnet3Subnet631C5E25": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-west-2c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet3"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet3/Subnet"
      }
    },
    "VPCPublicSubnet3RouteTable98AE0E14": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet3/RouteTable"
      }
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet3/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet3/DefaultRoute"
      }
    },
    "VPCPublicSubnet3EIPAD4BC883": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet3/EIP"
      }
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PublicSubnet3/NATGateway"
      }
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-west-2a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PrivateSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet1/Subnet"
      }
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-west-2b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PrivateSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet2/Subnet"
      }
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet2NATGateway3C070193"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "VPCPrivateSubnet3Subnet3EDCD457": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "us-west-2c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PrivateSubnet3"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet3/Subnet"
      }
    },
    "VPCPrivateSubnet3RouteTable192186F8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet3/RouteTable"
      }
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/PrivateSubnet3/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-hack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/VPC/VPCGW"
      }
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Cluster/Resource"
      }
    },
    "HackCertificateCertificateRequestorFunctionServiceRole37BD2671": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/HackCertificate/CertificateRequestorFunction/ServiceRole/Resource"
      }
    },
    "HackCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy9FFE4DBA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/Z3SOAGRSVKCEWP"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "HackCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy9FFE4DBA",
        "Roles": [
          {
            "Ref": "HackCertificateCertificateRequestorFunctionServiceRole37BD2671"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/HackCertificate/CertificateRequestorFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "HackCertificateCertificateRequestorFunction746EFE2A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3Bucket0997A4A0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "HackCertificateCertificateRequestorFunctionServiceRole37BD2671",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900
      },
      "DependsOn": [
        "HackCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy9FFE4DBA",
        "HackCertificateCertificateRequestorFunctionServiceRole37BD2671"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-hack/HackCertificate/CertificateRequestorFunction/Resource",
        "aws:asset:path": "asset.0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0",
        "aws:asset:property": "Code"
      }
    },
    "HackCertificateCertificateRequestorResource5DA2EE23": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "HackCertificateCertificateRequestorFunction746EFE2A",
            "Arn"
          ]
        },
        "DomainName": "hackernews.greengocloud.com",
        "HostedZoneId": "Z3SOAGRSVKCEWP"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdk-hack/HackCertificate/CertificateRequestorResource/Default"
      }
    },
    "WebserviceLB68A51E9E": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "WebserviceLBSecurityGroupA1EA7592",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "VPCPublicSubnet1SubnetB4246D30"
          },
          {
            "Ref": "VPCPublicSubnet2Subnet74179F39"
          },
          {
            "Ref": "VPCPublicSubnet3Subnet631C5E25"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet3DefaultRouteA0D29D46"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/LB/Resource"
      }
    },
    "WebserviceLBSecurityGroupA1EA7592": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB cdkhackWebserviceLB12023794",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/LB/SecurityGroup/Resource"
      }
    },
    "WebserviceLBSecurityGrouptocdkhackWebserviceServiceSecurityGroup0F0666018080EC87195D": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "WebserviceLBSecurityGroupA1EA7592",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WebserviceServiceSecurityGroup3D0D1BEB",
            "GroupId"
          ]
        },
        "FromPort": 8080,
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/LB/SecurityGroup/to cdkhackWebserviceServiceSecurityGroup0F066601:8080"
      }
    },
    "WebserviceLBPublicListener284B8AE7": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "WebserviceLBPublicListenerECSGroupB67F3549"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "WebserviceLB68A51E9E"
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "Certificates": [
          {
            "CertificateArn": {
              "Fn::GetAtt": [
                "HackCertificateCertificateRequestorResource5DA2EE23",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/LB/PublicListener/Resource"
      }
    },
    "WebserviceLBPublicListenerECSGroupB67F3549": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "WebserviceDNSAE34C47D": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "hackernews.greengocloud.com.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "WebserviceLB68A51E9E",
              "DNSName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "WebserviceLB68A51E9E",
              "CanonicalHostedZoneID"
            ]
          }
        },
        "HostedZoneId": "Z3SOAGRSVKCEWP"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/DNS/Resource"
      }
    },
    "WebserviceTaskDefTaskRole2E65A9A5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/TaskDef/TaskRole/Resource"
      }
    },
    "WebserviceTaskDef2851B25A": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  "987092829714.dkr.ecr.us-west-2.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "@sha256:",
                          {
                            "Ref": "AssetParameters50db76a94c266f6e5d255b59b50712c0b7b6eab110333f2026da8e4b38d7ec55ImageName6AFE0FA8"
                          }
                        ]
                      }
                    ]
                  },
                  "@sha256:",
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "@sha256:",
                          {
                            "Ref": "AssetParameters50db76a94c266f6e5d255b59b50712c0b7b6eab110333f2026da8e4b38d7ec55ImageName6AFE0FA8"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "WebserviceTaskDefwebLogGroup442EECEC"
                },
                "awslogs-stream-prefix": "Webservice",
                "awslogs-region": "us-west-2"
              }
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "WebserviceTaskDefExecutionRole97EDD24E",
            "Arn"
          ]
        },
        "Family": "cdkhackWebserviceTaskDef38CD9DB0",
        "Memory": "514",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "WebserviceTaskDefTaskRole2E65A9A5",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/TaskDef/Resource"
      }
    },
    "WebserviceTaskDefwebAssetImageAdoptRepository0BDBD309": {
      "Type": "Custom::ECRAdoptedRepository",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c52BE89E9",
            "Arn"
          ]
        },
        "RepositoryName": {
          "Fn::Select": [
            0,
            {
              "Fn::Split": [
                "@sha256:",
                {
                  "Ref": "AssetParameters50db76a94c266f6e5d255b59b50712c0b7b6eab110333f2026da8e4b38d7ec55ImageName6AFE0FA8"
                }
              ]
            }
          ]
        }
      },
      "DependsOn": [
        "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleDefaultPolicy6BC8737C",
        "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleD788AA17"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/TaskDef/web/AssetImage/AdoptRepository/Resource/Default"
      }
    },
    "WebserviceTaskDefwebLogGroup442EECEC": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/TaskDef/web/LogGroup/Resource"
      }
    },
    "WebserviceTaskDefExecutionRole97EDD24E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/TaskDef/ExecutionRole/Resource"
      }
    },
    "WebserviceTaskDefExecutionRoleDefaultPolicy82EAB551": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:us-west-2:987092829714:repository/",
                    {
                      "Fn::GetAtt": [
                        "WebserviceTaskDefwebAssetImageAdoptRepository0BDBD309",
                        "RepositoryName"
                      ]
                    }
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "WebserviceTaskDefwebLogGroup442EECEC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WebserviceTaskDefExecutionRoleDefaultPolicy82EAB551",
        "Roles": [
          {
            "Ref": "WebserviceTaskDefExecutionRole97EDD24E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "WebserviceService8B6DCD76": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "WebserviceLBPublicListenerECSGroupB67F3549"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "WebserviceServiceSecurityGroup3D0D1BEB",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "VPCPublicSubnet1SubnetB4246D30"
              },
              {
                "Ref": "VPCPublicSubnet2Subnet74179F39"
              },
              {
                "Ref": "VPCPublicSubnet3Subnet631C5E25"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "WebserviceTaskDef2851B25A"
        }
      },
      "DependsOn": [
        "WebserviceLBPublicListenerECSGroupB67F3549",
        "WebserviceLBPublicListener284B8AE7"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/Service/Service"
      }
    },
    "WebserviceServiceSecurityGroup3D0D1BEB": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "cdk-hack/Webservice/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/Service/SecurityGroup/Resource"
      }
    },
    "WebserviceServiceSecurityGroupfromcdkhackWebserviceLBSecurityGroupC8A4C1C88080F98E39B6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "WebserviceServiceSecurityGroup3D0D1BEB",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "WebserviceLBSecurityGroupA1EA7592",
            "GroupId"
          ]
        },
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/Webservice/Service/SecurityGroup/from cdkhackWebserviceLBSecurityGroupC8A4C1C8:8080"
      }
    },
    "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleD788AA17": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/ServiceRole/Resource"
      }
    },
    "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleDefaultPolicy6BC8737C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:GetRepositoryPolicy",
                "ecr:SetRepositoryPolicy",
                "ecr:DeleteRepository",
                "ecr:ListImages",
                "ecr:BatchDeleteImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:us-west-2:987092829714:repository/",
                    {
                      "Fn::Select": [
                        0,
                        {
                          "Fn::Split": [
                            "@sha256:",
                            {
                              "Ref": "AssetParameters50db76a94c266f6e5d255b59b50712c0b7b6eab110333f2026da8e4b38d7ec55ImageName6AFE0FA8"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleDefaultPolicy6BC8737C",
        "Roles": [
          {
            "Ref": "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleD788AA17"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-hack/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c52BE89E9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3Bucket7CBBD48C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3VersionKey87E3D057"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3VersionKey87E3D057"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "handler.handler",
        "Role": {
          "Fn::GetAtt": [
            "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleD788AA17",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300
      },
      "DependsOn": [
        "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleDefaultPolicy6BC8737C",
        "AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62cServiceRoleD788AA17"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-hack/AdoptEcrRepositorydbc60defc59544bcaa5c28c95d68f62c/Resource",
        "aws:asset:path": "asset.a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7",
        "aws:asset:property": "Code"
      }
    }
  },
  "Parameters": {
    "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3Bucket0997A4A0": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0\""
    },
    "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166": {
      "Type": "String",
      "Description": "S3 key for asset version \"0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0\""
    },
    "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0ArtifactHashF8F836D1": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0\""
    },
    "AssetParameters50db76a94c266f6e5d255b59b50712c0b7b6eab110333f2026da8e4b38d7ec55ImageName6AFE0FA8": {
      "Type": "String",
      "Description": "ECR repository name and tag for asset \"50db76a94c266f6e5d255b59b50712c0b7b6eab110333f2026da8e4b38d7ec55\""
    },
    "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3Bucket7CBBD48C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7\""
    },
    "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7S3VersionKey87E3D057": {
      "Type": "String",
      "Description": "S3 key for asset version \"a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7\""
    },
    "AssetParametersa65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7ArtifactHash3E217B68": {
      "Type": "String",
      "Description": "Artifact hash for asset \"a65ac4beaa2b5a7b20eebf3b7c5c1c886b71428afa377e02dab0d10ab3be57e7\""
    }
  },
  "Outputs": {
    "WebserviceLoadBalancerDNS4CB5187C": {
      "Value": {
        "Fn::GetAtt": [
          "WebserviceLB68A51E9E",
          "DNSName"
        ]
      }
    },
    "WebserviceServiceURL95BFD1F7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "WebserviceDNSAE34C47D"
            }
          ]
        ]
      }
    }
  }
}